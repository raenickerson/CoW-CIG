# Brining in, and cleaning my data

Since my pilot data did not focus on cattle behavioral analysis, there will be little to no data on cows. Instead, I will focus on cleaning my data for visualizing wild species presence across camera sites. 

This pilot was in eastern Washington (just outside Colville) and focused on comparing cameras placed at the center of each camera grid cell to those placed on roads, trails, or other sites where we would expect to see more wildlife use - with a focus on capturing wolf presence.

## Brining in the pilot data

```{r data drop, eval = TRUE, echo = TRUE}
WAP <- dbGetQuery(cow_cig_db, "SELECT * FROM WA_DM_F;")
```

Alternative way to bring in the data: 

```{r csv_connection, eval = TRUE, echo = TRUE}
WAP <- read.csv("WA_DM_Final.csv", na = "NA")
```

## Cleaning the data

For some reason, R is reading in my csv file to have 99+ variables. So first I will remove all unneeded columns to just have the data collected, focusing on what might be useful later for data visulization.

```{r data, eval = TRUE, echo = TRUE}
# species occurrence table

S_O <- WAP %>% 
  select(date_pic, cam_id, station_id, species_id, num_individ_pics)
```

Notice that I selected the "num_individ_pics" column over the "num" column. This is because the "num_individ_pics" column show the number of individuals of a certain species per photo. For ranchers worried about predator pesence, knowing how many animals are around is important. 

Now let's make sure our date column is being read correctly by R using Lubridate

```{r date, eval = TRUE, echo = TRUE}
S_O <- S_O %>% 
  mutate(date_pic = ymd(date_pic))
class(S_O$date_pic)
```

Next, let's make sure all NA's, UNKNONWS, and ?s are set to NA, and make sure our columns are the correct data class

First, let's check the class for each column (except date_pic which we've already dealt with)

```{r class, eval = TRUE, echo = TRUE}
class(S_O$cam_id)
class(S_O$station_id)
class(S_O$species_id)
class(S_O$num_individ_pics)
```

Our num_individ_pics is the integar class, which is good, but our other variables need to be switched to as.factor so that we can categorize by cam_id, station_id, and species_id. 

```{r slice, eval = TRUE, echo = TRUE}
S_O$station_id <- as.factor(S_O$station_id)
S_O$cam_id <- as.factor(S_O$cam_id)
S_O$species_id <- as.factor(S_O$species_id)
```

Now, let's check that it worked

```{r check, eval = TRUE, echo = TRUE}
class(S_O$station_id)
class(S_O$species_id)
class(S_O$cam_id)
```

Next, let's standardize all the different ways that species were written using tidyverse. 

```{r preds, eval = TRUE, echo = TRUE}
S_O %>% 
  pull(species_id) %>% 
  unique()
```
As you can see, we have a bit of a mess here. So the first thing we want to do is separate the information we need from the information we don't. For example, we are only going to look at predator presence, so all other categories can be ignored (we will select for only predators later). But, we need to set all versions of predators to consistent naming - which includes BB (black bear), Lynx, coyote, Coyote, COYOTE, mountain lion, and Mountain Lion. 

First, will need to convert back to character, then set standard naming

```{r standard, eval = TRUE, echo = TRUE}
S_O$species_id <- as.character(S_O$species_id)

S_O <- S_O %>% 
  mutate(species_id = if_else(species_id == "mountain lion", "Cougar", species_id)) %>% 
  mutate(species_id = if_else(species_id == "Mountain Lion", "Cougar", species_id)) %>% 
  mutate(species_id = if_else(species_id == "lion", "Cougar", species_id)) %>% 
  mutate(species_id = if_else(species_id == "COYOTE", "Coyote", species_id)) %>% 
  mutate(species_id = if_else(species_id == "coyote", "Coyote", species_id)) %>% 
  mutate(species_id = if_else(species_id == "BB", "Black Bear", species_id))
```

Now let's change it back to factor, and check that it worked.

```{r preds-check, eval = TRUE, echo = TRUE}
S_O$species_id <- as.factor(S_O$species_id)

S_O %>% 
  pull(species_id) %>% 
  unique()
```
Excellent!

Now, let's check for distinct values in our other columns just to make sure there are no errors - specifically cam_id and num_individ_pics since we will be using those columns to visualize our predator presence across camera sites. 
```{r distinct, eval = TRUE, echo = TRUE}
S_O %>% 
  pull(cam_id) %>% 
  unique()
```

Looks like we have 12 different cameras, which means our other 8 cameras did not get photos of any animals at all (sad)

Let's do the same for the num_individ_pics columns

```{r second, eval = TRUE, echo = TRUE}
S_O %>% 
  pull(num_individ_pics) %>% 
  unique()
```

Looks like we have some NA values. To simplify our analysis, I'm going to remove any rows/values/observations with NA as the response. 

```{r NA, eval = TRUE, echo = TRUE}
S_O <- S_O %>%
  filter(!is.na(num_individ_pics))
```

Great! Now our data is clean enough to start plotting - we have our predator species categorized cleanly into four species - Lynx, Cougar, Black Bear, and Coyote, our columns no longer contain missing data, and are the correct class. 